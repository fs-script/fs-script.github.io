import{_ as t,o as d,c as a,e}from"./app.b32f6c43.js";const r={},i=e(`<h2 id="一、git" tabindex="-1"><a class="header-anchor" href="#一、git" aria-hidden="true">#</a> 一、Git</h2><blockquote><p>Git 是分布式版本管理系统，为了更好的管理 Linux 内核开发而创立的。</p></blockquote><ul><li>工作区（写代码）-&gt; <code>git add</code> -&gt;暂存区（临时存储）-&gt; <code>git commit</code> -&gt; 本地库（记录历史版本）-&gt; <code>git push</code> -&gt; 远程库</li><li>代码托管中心是基于网络服务器的远程代码仓库，简称远程库。有互联网类的，例如 GitHub、Gitee；有局域网类的，例如 GitLab</li></ul><h3 id="_01-常用命令" tabindex="-1"><a class="header-anchor" href="#_01-常用命令" aria-hidden="true">#</a> 01 - 常用命令</h3><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>git --version</td><td>查看 git 版本</td></tr><tr><td>git config --global user.name 用户名</td><td>设置用户签名</td></tr><tr><td>git config --global user.email 邮箱地址</td><td>设置邮箱地址</td></tr><tr><td></td><td></td></tr><tr><td>git init</td><td>初始化本地库</td></tr><tr><td>git status</td><td>查看状态</td></tr><tr><td>git add 文件名</td><td>追加到暂存区</td></tr><tr><td>git rm --cached 文件名</td><td>删除暂存区文件</td></tr><tr><td>git commit -m &quot;日志信息&quot; 文件名</td><td>提交到本地库</td></tr><tr><td>git reflog</td><td>查看版本</td></tr><tr><td>git log</td><td>查看版本详细信息</td></tr><tr><td></td><td></td></tr><tr><td>git push 别名或链接 分支</td><td>推送</td></tr><tr><td>git pull 别名或链接 分支</td><td>拉取</td></tr><tr><td>git clone 链接</td><td>克隆</td></tr><tr><td>git clone 链接 .</td><td>仅克隆文件内容不带根目录</td></tr></tbody></table><h3 id="_02-版本穿梭" tabindex="-1"><a class="header-anchor" href="#_02-版本穿梭" aria-hidden="true">#</a> 02 - 版本穿梭</h3><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>git reset --hard 版本号</td><td>穿梭至指定的版本</td></tr></tbody></table><h3 id="_03-分支操作" tabindex="-1"><a class="header-anchor" href="#_03-分支操作" aria-hidden="true">#</a> 03 - 分支操作</h3><ul><li>分支可以并行推进多个功能的开发，提高开发效率，分支开发失败不会影响主分支或其他分支。</li></ul><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>git branch 分支名</td><td>创建分支</td></tr><tr><td>git branch -v</td><td>查看分支</td></tr><tr><td>git checkout 分支名</td><td>切换分支</td></tr><tr><td>git merge 分支名</td><td>把指定的分支合并到当前分支上</td></tr></tbody></table><ul><li>冲突合并：手动修改文件，提交时不加文件名。</li></ul><h3 id="_04-团队协作机制" tabindex="-1"><a class="header-anchor" href="#_04-团队协作机制" aria-hidden="true">#</a> 04 - 团队协作机制</h3><ul><li>团队内协作</li><li>跨团队协作 fork、pull request、审核、merge</li></ul><h2 id="二、svn" tabindex="-1"><a class="header-anchor" href="#二、svn" aria-hidden="true">#</a> 二、SVN</h2><blockquote><p>集中式版本控制的典型代表 SVN</p></blockquote><ul><li>目录级权限控制，按目录划分权限</li><li>TortoiseSVN 本地客户端</li><li>SVNBucket 远程仓库</li></ul><h3 id="_01-检出" tabindex="-1"><a class="header-anchor" href="#_01-检出" aria-hidden="true">#</a> 01 - 检出</h3><h3 id="_02-新增" tabindex="-1"><a class="header-anchor" href="#_02-新增" aria-hidden="true">#</a> 02 - 新增</h3><h3 id="_03-提交" tabindex="-1"><a class="header-anchor" href="#_03-提交" aria-hidden="true">#</a> 03 - 提交</h3><h3 id="_04-更新" tabindex="-1"><a class="header-anchor" href="#_04-更新" aria-hidden="true">#</a> 04 - 更新</h3><h3 id="_05-历史记录" tabindex="-1"><a class="header-anchor" href="#_05-历史记录" aria-hidden="true">#</a> 05 - 历史记录</h3><h3 id="_06-撤销本地修改" tabindex="-1"><a class="header-anchor" href="#_06-撤销本地修改" aria-hidden="true">#</a> 06 - 撤销本地修改</h3><h3 id="_07-撤销已提交内容" tabindex="-1"><a class="header-anchor" href="#_07-撤销已提交内容" aria-hidden="true">#</a> 07 - 撤销已提交内容</h3><h3 id="_08-恢复到指定版本" tabindex="-1"><a class="header-anchor" href="#_08-恢复到指定版本" aria-hidden="true">#</a> 08 - 恢复到指定版本</h3><h3 id="_09-忽略文件与文件夹" tabindex="-1"><a class="header-anchor" href="#_09-忽略文件与文件夹" aria-hidden="true">#</a> 09 - 忽略文件与文件夹</h3><h3 id="_10-解决冲突" tabindex="-1"><a class="header-anchor" href="#_10-解决冲突" aria-hidden="true">#</a> 10 - 解决冲突</h3><h3 id="_11-分支" tabindex="-1"><a class="header-anchor" href="#_11-分支" aria-hidden="true">#</a> 11 - 分支</h3><ul><li>经典目录结构 trunk（主干）、branches（分支）、tags（标签）</li></ul><h3 id="_12-代码暂存" tabindex="-1"><a class="header-anchor" href="#_12-代码暂存" aria-hidden="true">#</a> 12 - 代码暂存</h3><h3 id="_13-代码合并" tabindex="-1"><a class="header-anchor" href="#_13-代码合并" aria-hidden="true">#</a> 13 - 代码合并</h3><h2 id="三、github" tabindex="-1"><a class="header-anchor" href="#三、github" aria-hidden="true">#</a> 三、GitHub</h2><ul><li>创建远程库地址别名：</li></ul><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>git remote -v</td><td>查看当前已有别名</td></tr><tr><td>git remote add 别名 地址</td><td>创建别名</td></tr></tbody></table><ul><li>push 需要加入团队远程库的账号</li><li>SSH 免密登录，需要生成一个密钥对</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh-keygen -t rsa -C pygoogle@163.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>将生成的公钥添加到远程库的账号</li></ul><h2 id="四、gitlab" tabindex="-1"><a class="header-anchor" href="#四、gitlab" aria-hidden="true">#</a> 四、GitLab</h2>`,37),h=[i];function l(n,c){return d(),a("div",null,h)}const s=t(r,[["render",l],["__file","a-git.html.vue"]]);export{s as default};
